// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	rpc.proto

It has these top-level messages:
	Message
	Request
	Response
	Params1
	Result1
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TYPE int32

const (
	TYPE_PING     TYPE = 0
	TYPE_REQUEST  TYPE = 1
	TYPE_RESPONSE TYPE = 2
)

var TYPE_name = map[int32]string{
	0: "PING",
	1: "REQUEST",
	2: "RESPONSE",
}
var TYPE_value = map[string]int32{
	"PING":     0,
	"REQUEST":  1,
	"RESPONSE": 2,
}

func (x TYPE) String() string {
	return proto.EnumName(TYPE_name, int32(x))
}
func (TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Message struct {
	Id   uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type TYPE   `protobuf:"varint,2,opt,name=type,enum=pb.TYPE" json:"type,omitempty"`
	// Types that are valid to be assigned to Body:
	//	*Message_Ping
	//	*Message_Request
	//	*Message_Response
	Body isMessage_Body `protobuf_oneof:"body"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isMessage_Body interface {
	isMessage_Body()
}

type Message_Ping struct {
	Ping bool `protobuf:"varint,10,opt,name=ping,oneof"`
}
type Message_Request struct {
	Request *Request `protobuf:"bytes,11,opt,name=request,oneof"`
}
type Message_Response struct {
	Response *Response `protobuf:"bytes,12,opt,name=response,oneof"`
}

func (*Message_Ping) isMessage_Body()     {}
func (*Message_Request) isMessage_Body()  {}
func (*Message_Response) isMessage_Body() {}

func (m *Message) GetBody() isMessage_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Message) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Message) GetType() TYPE {
	if m != nil {
		return m.Type
	}
	return TYPE_PING
}

func (m *Message) GetPing() bool {
	if x, ok := m.GetBody().(*Message_Ping); ok {
		return x.Ping
	}
	return false
}

func (m *Message) GetRequest() *Request {
	if x, ok := m.GetBody().(*Message_Request); ok {
		return x.Request
	}
	return nil
}

func (m *Message) GetResponse() *Response {
	if x, ok := m.GetBody().(*Message_Response); ok {
		return x.Response
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Message) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Message_OneofMarshaler, _Message_OneofUnmarshaler, _Message_OneofSizer, []interface{}{
		(*Message_Ping)(nil),
		(*Message_Request)(nil),
		(*Message_Response)(nil),
	}
}

func _Message_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Message)
	// body
	switch x := m.Body.(type) {
	case *Message_Ping:
		t := uint64(0)
		if x.Ping {
			t = 1
		}
		b.EncodeVarint(10<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Message_Request:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Request); err != nil {
			return err
		}
	case *Message_Response:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Response); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Message.Body has unexpected type %T", x)
	}
	return nil
}

func _Message_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Message)
	switch tag {
	case 10: // body.ping
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Body = &Message_Ping{x != 0}
		return true, err
	case 11: // body.request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Request)
		err := b.DecodeMessage(msg)
		m.Body = &Message_Request{msg}
		return true, err
	case 12: // body.response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Response)
		err := b.DecodeMessage(msg)
		m.Body = &Message_Response{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Message_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Message)
	// body
	switch x := m.Body.(type) {
	case *Message_Ping:
		n += proto.SizeVarint(10<<3 | proto.WireVarint)
		n += 1
	case *Message_Request:
		s := proto.Size(x.Request)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Response:
		s := proto.Size(x.Response)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Request struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Params []byte `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Request) GetParams() []byte {
	if m != nil {
		return m.Params
	}
	return nil
}

type Response struct {
	For   uint64 `protobuf:"varint,1,opt,name=for" json:"for,omitempty"`
	Error bool   `protobuf:"varint,2,opt,name=error" json:"error,omitempty"`
	Body  []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Response) GetFor() uint64 {
	if m != nil {
		return m.For
	}
	return 0
}

func (m *Response) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *Response) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type Params1 struct {
	A uint32 `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B uint32 `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
}

func (m *Params1) Reset()                    { *m = Params1{} }
func (m *Params1) String() string            { return proto.CompactTextString(m) }
func (*Params1) ProtoMessage()               {}
func (*Params1) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Params1) GetA() uint32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Params1) GetB() uint32 {
	if m != nil {
		return m.B
	}
	return 0
}

type Result1 struct {
	Gavno string `protobuf:"bytes,1,opt,name=gavno" json:"gavno,omitempty"`
}

func (m *Result1) Reset()                    { *m = Result1{} }
func (m *Result1) String() string            { return proto.CompactTextString(m) }
func (*Result1) ProtoMessage()               {}
func (*Result1) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Result1) GetGavno() string {
	if m != nil {
		return m.Gavno
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "pb.Message")
	proto.RegisterType((*Request)(nil), "pb.Request")
	proto.RegisterType((*Response)(nil), "pb.Response")
	proto.RegisterType((*Params1)(nil), "pb.Params1")
	proto.RegisterType((*Result1)(nil), "pb.Result1")
	proto.RegisterEnum("pb.TYPE", TYPE_name, TYPE_value)
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xb3, 0x69, 0x6c, 0xd2, 0x49, 0x5a, 0xc2, 0x50, 0x24, 0x07, 0xc1, 0x10, 0x10, 0x43,
	0x85, 0x42, 0x2b, 0xbe, 0x80, 0x10, 0xad, 0x07, 0x6b, 0xdc, 0xd6, 0x83, 0xc7, 0x8d, 0x5d, 0x4b,
	0xc1, 0x66, 0xd7, 0xdd, 0x54, 0xe8, 0x2b, 0xf9, 0x94, 0xb2, 0x9b, 0xd4, 0xdb, 0xfc, 0x33, 0xf3,
	0x7f, 0xf3, 0x27, 0x0b, 0x03, 0x25, 0x3f, 0xa6, 0x52, 0x89, 0x46, 0xa0, 0x2b, 0xab, 0xec, 0x97,
	0x80, 0xff, 0xcc, 0xb5, 0x66, 0x5b, 0x8e, 0x23, 0x70, 0x77, 0x9b, 0x84, 0xa4, 0x24, 0xf7, 0xa8,
	0xbb, 0xdb, 0xe0, 0x05, 0x78, 0xcd, 0x51, 0xf2, 0xc4, 0x4d, 0x49, 0x3e, 0x9a, 0x07, 0x53, 0x59,
	0x4d, 0xd7, 0xef, 0x65, 0x41, 0x6d, 0x17, 0xc7, 0xe0, 0xc9, 0x5d, 0xbd, 0x4d, 0x20, 0x25, 0x79,
	0xb0, 0x70, 0xa8, 0x55, 0x78, 0x0d, 0xbe, 0xe2, 0xdf, 0x07, 0xae, 0x9b, 0x24, 0x4c, 0x49, 0x1e,
	0xce, 0x43, 0x63, 0xa3, 0x6d, 0x6b, 0xe1, 0xd0, 0xd3, 0x14, 0x27, 0x10, 0x28, 0xae, 0xa5, 0xa8,
	0x35, 0x4f, 0x22, 0xbb, 0x19, 0xb5, 0x9b, 0x6d, 0x6f, 0xe1, 0xd0, 0xff, 0xf9, 0x7d, 0x1f, 0xbc,
	0x4a, 0x6c, 0x8e, 0xd9, 0x1d, 0xf8, 0x1d, 0x09, 0x11, 0xbc, 0x9a, 0xed, 0xb9, 0x4d, 0x3b, 0xa0,
	0xb6, 0xc6, 0x73, 0xe8, 0x4b, 0xa6, 0xd8, 0x5e, 0xdb, 0xc4, 0x11, 0xed, 0x54, 0xf6, 0x00, 0xc1,
	0x09, 0x8b, 0x31, 0xf4, 0x3e, 0x85, 0xea, 0x3e, 0xd2, 0x94, 0x38, 0x86, 0x33, 0xae, 0x94, 0x50,
	0xd6, 0x14, 0xd0, 0x56, 0x18, 0xbe, 0x39, 0x99, 0xf4, 0x2c, 0xa9, 0x3d, 0x7f, 0x05, 0x7e, 0x69,
	0x89, 0x33, 0x8c, 0x80, 0x30, 0x0b, 0x19, 0x52, 0xc2, 0x8c, 0xaa, 0xac, 0x7d, 0x48, 0x49, 0x95,
	0x5d, 0x9a, 0x94, 0xfa, 0xf0, 0xd5, 0xcc, 0x0c, 0x7b, 0xcb, 0x7e, 0x6a, 0xd1, 0xc5, 0x6c, 0xc5,
	0xe4, 0x06, 0x3c, 0xf3, 0x1f, 0x31, 0x00, 0xaf, 0x7c, 0x5a, 0x3e, 0xc6, 0x0e, 0x86, 0xe0, 0xd3,
	0xe2, 0xf5, 0xad, 0x58, 0xad, 0x63, 0x82, 0x11, 0x04, 0xb4, 0x58, 0x95, 0x2f, 0xcb, 0x55, 0x11,
	0xbb, 0x55, 0xdf, 0xbe, 0xd5, 0xed, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x50, 0x91, 0xcc,
	0xb8, 0x01, 0x00, 0x00,
}
